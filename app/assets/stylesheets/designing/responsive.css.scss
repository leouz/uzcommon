@mixin break-min($w) {
  @media only screen and (min-width : $w) {
    @content;
  }
}

@mixin break-max($w) {
  @media only screen and (max-width : $w) {
    @content;
  }
}

@mixin break-min-p($min-width, $property, $value) {
  @media only screen and (min-width : $min-width) {
    #{$property}: $value;
  }
}

@mixin ar-break-min($from-min-width, $to-min-width, $number-of-media-queries, $property, $from-value, $to-value) {
  $value-diff: ($from-value - $to-value) / $number-of-media-queries;
  $width-diff: ($from-min-width - $to-min-width) / $number-of-media-queries;

  @while $number-of-media-queries > 0 {
    @media only screen and (min-width : $from-min-width - ($number-of-media-queries * $width-diff)) {
      #{$property}: $from-value - ($number-of-media-queries * $value-diff);
    }
    $number-of-media-queries: $number-of-media-queries - 1;
  }
}

@mixin ar-break-max($from-max-width, $to-max-width, $number-of-media-queries, $property, $from-value, $to-value) {
  $value-diff: ($from-value - $to-value) / $number-of-media-queries;
  $width-diff: ($from-max-width - $to-max-width) / $number-of-media-queries;

  @while $number-of-media-queries >= 0 {
    @media only screen and (max-width : $from-max-width - ($number-of-media-queries * $width-diff)) {
      #{$property}: $from-value - ($number-of-media-queries * $value-diff);
    }
    $number-of-media-queries: $number-of-media-queries - 1;
  }
}

@mixin retina-ratio {
  @media (-webkit-min-device-pixel-ratio: 2), 
    (-o-min-device-pixel-ratio: 3/2), 
    (min--moz-device-pixel-ratio: 2), 
    (min-device-pixel-ratio: 2), 
    (min-resolution: 144dppx) {
        @content;
    }
}

@mixin retina-ratio-or-break-min($break-min) {
  @media (-webkit-min-device-pixel-ratio: 2), 
    (-o-min-device-pixel-ratio: 3/2), 
    (min--moz-device-pixel-ratio: 2), 
    (min-device-pixel-ratio: 2), 
    (min-resolution: 144dppx),
    only screen and (min-width : $break-min) {
        @content;
    }
}